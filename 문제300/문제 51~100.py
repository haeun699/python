
# 변수는 저장 공간
    # num = 10
#리스트는 여러개의 변수를 저장하는 공간
    # list = [변수1 , 변수2 , 변수3 -- ]

#문제51 : 여러개 변수를 저장하는 공간 [ ] 안에 변수 넣기
movie_rank = ["닥터 스트레인지" , "스플릿" , "럭키" ]
print(movie_rank)

#문제52 : 리스트명.append( 추가할변수 ) : 리스트에 변수 추가
movie_rank = ["닥터 스트레인지" , "스플릿" , "럭키" ]
movie_rank.append("베트맨")
print(movie_rank)

#문제53 : 리스트명.insert( 인덱스번호 , 추가할변수 ) : 인덱스 위치에 추가
movie_rank = ["닥터 스트레인지" , "스플릿" , "럭키" , "베트맨"]
movie_rank.insert( 1 , "슈퍼맨") # 1번 인덱스에 슈퍼맨 추가

#문제54 : del 리스트명[인덱스명] : 해당 인덱스번호가 삭제
movie_rank = ["닥터 스트레인지" , "슈퍼맨" ,  "스플릿" , "럭키" , "배트맨"]
del movie_rank[3]

#문제55 : del 리스트명[인덱스 번호] : 해당 인덱스번호 삭제
movie_rank = ["닥터 스트레인지" , "슈퍼맨" ,  "스플릿" , "럭키" , "배트맨"]
del movie_rank[2] # 스플릿삭제 => 배트맨 = > 스플릿 자리로 이동
del movie_rank[2] # 배트맨 삭제
print(movie_rank)

#문제56 : 리스트 합치기
lang1 = ["C",'C++',"JAVA"]
lang2 = ["Python","Go","C#"]
리스트 = lang1 + lang2
print(리스트)

#문제57 :
nums = [1, 2, 3, 4, 5, 6, 7]
print( max(nums) )
print( min(nums) )

#문제58 : 합계 [sum()]
nums = [1,2,3,4,5]
print(sum(nums))

#문제59 : 개수 [len()]
cook = ["피자","김밥","만두","양념치킨","족발","피자","김치만두","쫄면","쏘세지","라면","팥빙수","김치전"]
print([cook])

#문제60 : 합계 / 계수 = 평균  sum/len = 평균
nums = [1,2,3,4,5]
평균 = sum(nums) / len(nums)
print(평균)

#데이터를 저장하는 방법 4가지 의 차이 와 사용방법
   # 변수 =
   # 리스트 =
   # 튜플 =
   # 딕셔너리 =

#문제61 :
price = ['20180728' , 100 , 130 , 140 , 150 , 160 , 170]
print(price[1:])
    # [인덱싱] = [1 :] = 2번째값부터 끝까지

#문제62 :
nums = [1,2,3,4,5,6,7,8,9,10]
print(nums[ : : 2])
    # [인덱싱] = [ : : 2 ] = 0번째값부터 끝까지 2개씩 이동
    # [시작번호 : 끝번호 : 이동단위]

#문제63 :
nums = [1,2,3,4,5,6,7,8,9,10]
print(nums[1 : : 2])
    # ([인덱싱] = [ 1 : : 2 ] = 1번째 값부터 끝까지 2개씩 이동 = 1 3 5 7 9

#문제64 :
nums = [1,2,3,4,5]
print(nums[ : : -1 ])
    # [ 슬라이싱 ] = [ : : -1 ] = 뒤로이동

#문제65 :
interest = ['삼성전자','LG전자','Naver']
print(interest[0],interest[2])

#문제66 :
interest = ['삼성전자','LG전자','Naver','SK하이닉스','미래에셋대우']
print(" ".join(interest))
    # join 함수 : 리스트 내 항목을 합칠때 사용

#문제67 :
interest = ['삼성전자','LG전자','Naver','SK하이닉스','미래에셋대우']
print("/".join(interest))

#문제68 :
interest = ['삼성전자','LG전자','Naver','SK하이닉스','미래에셋대우']
print("\n".join(interest))
    # \n : 줄바꿈 제어문자  # \t : 들여쓰기 제어문자

#문제69 :
string = "삼성전자/LG전자/Naver"
interest = string.split('/')
print(interest)

#문제70 :
#오름차순
data = [2,4,3,1,5,10,9]
data.sort()
print( data )
#내림차순
data.sort(reverse=True)
print( data )

#튜플 : 리스트와 거의 유사 [] => ()
  # 단점 : 튜플은 값을 바꿀수가 없다
  # 튜플명 = ( 값1 , 값2 , 값3 -- 등등 )

#문제71 :
my_variable = ( ) # 튜플생성

#문제72 :
movie_rank = ("닥터 스트레인지","스플릿","럭키")

#문제73 :
my_tuple = ( 1 )
print(type(my_tuple) ) #int 정수 # 튜플이 아니다
print( type(my_tuple) ) #tuple # 튜플로 생성

#문제74 :
# t = (1,2,3)
# t[0] = 'a' #0번째 순서의 값을 a로 변환
    # 오류 발생 이유 : 튜플은 값을 빠꿀수가 없다

#문제75 :
t = 1,2,3,4
print(type(t)) # t 타입은 튜플

#문제76 :
# t = ('a','b','c')
# t[0] = 'A'
     # 오류 발생 이유 : 튜플은 값을 바꿀수 없다

#문제77 :
interest = ("삼성전자","LG전자","SK Hinix")
print( list (interest))

#문제78 :
interest = ("삼성전자","LG전자","SK Hinix")
print( tuple (interest))

#문제79 :
team = ('apple','banana','cake')
a,b,c = team
print(a,b,c)
    # 팩킹[ 묶음 ] : 리스트 , 튜플 , 닥쇼노라
    # 언팩킹[ 묶음x ] : 데이터 한개 [ 변수 ]

#문제 80 :
data = tuple( range(2,100,2) )
print(data)
    # range( 시작값 , 끝값 , 증가단위 )

#딕셔너리 ()
   # 하나의 키와 값으로 이루어진 한 쌍 을 여러개 저장
   # 딕셔너리명 = { 키 : 값 , 키2 : 값2 , 키3 : 값3 }

#문제 81 :
scores = [8.8, 8.9, 8.7, 9.2, 9.3, 9.7, 9.9, 9.5, 7.8, 9.4]
print( *scores ) #리스트 제거
*scores,_,_ = scores #뒤에서 2개 생략
print(scores)

#문제82 :
scores = [8.8, 8.9, 8.7, 9.2, 9.3, 9.7, 9.9, 9.5, 7.8, 9.4]
_,_,*scores = scores # 앞에서 2개 생략
print( scores )

#문제83 :
scores = [8.8, 8.9, 8.7, 9.2, 9.3, 9.7, 9.9, 9.5, 7.8, 9.4]
_,*scores,_ = scores # 앞뒤로 1개 생략
print( scores )

#문제 84 :
temp = { }

#문제85 :
아이스크림 = {"메로나" : 1000 , "폴라포" : 1200 , "빵빠레" : 1500 }
#딕셔너리 = {     "키" : 값 , "키2" : 값 , "키3" : 값 }
print(아이스크림)

#문제86 :
아이스크림 = {"메로나" : 1000 , "폴라포" : 1200 , "빵빠레" : 1500 }
아이스크림 ["죠스바"] = 1200
아이스크림 ["월드콘"] = 1500
    # 딕셔너리에 항목 추가 방법 : 딕셔너리명["키"] = 값
print(아이스크림)

#문제87 :
아이스크림 = {"메로나" : 1000 ,
         '폴라포' : 1200 ,
         '빵파레' : 1800 ,
         '죠스바' : 1200 ,
         '월드콘' : 1500 }
print(" 메로나 가격 : " , 아이스크림["메로나"] )
     # 딕셔너리에 값을 출력 방법 : 딕셔너리명[ 키 ] => 해당하는 키의 값이 출력 된다

#문제88 :
아이스크림 =  {"메로나" : 1000 ,
         '폴라포' : 1200 ,
         '빵파레' : 1800 ,
         '죠스바' : 1200 ,
         '월드콘' : 1500 }
아이스크림 ["메로나"] = 1300
print(아이스크림)

#문제89 :
아이스크림 =  {"메로나" : 1000 ,
         '폴라포' : 1200 ,
         '빵파레' : 1800 ,
         '죠스바' : 1200 ,
         '월드콘' : 1500 }
del 아이스크림["메로나"] # del 딕셔너리['키'] => 해당하는 키의 값을 삭제
print(아이스크림)

#문제90 :
# 아이스크림 = {'폴라포':1200 , '빵빠레':1000, '월드콘':1500 , '메로나' : 1000 }
# 아이스크림['누가바']
    # 오류 발새 이유 : 딕셔너리에 '누가바' 라는 키가 없어서 오류발생

#문제91 :
   # 딕셔너리 값에 리스트 넣을수 있다
아이스크림 = {"메로나" : [300 , 20] , "비비빅":[400,3], "죠스바": [250,100] }
# 딕셔너리명 = { " 키 " : 리스트 , " 키2" : 리스트2 , "키3" : 리스트 }
print(아이스크림)

#문제92 :
아이스크림 = {"메로나" : [300 , 20] , "비비빅":[400,3], "죠스바": [250,100] }
print("메로나의 가격 : " , 아이스크림["메로나"][0]) # 해당 하는 키의 값[0]

#문제93 :
아이스크림 = {"메로나" : [300 , 20] , "비비빅":[400,3], "죠스바": [250,100] }
print( "메로나의 재고 : ", 아이스크림["메로나"][1] ) # 해당 하는 키 외 리스트내 1번 인덱스 => 재고

#문제94 :
inventory = {"메로나": [300, 20] , "비비빅": [400, 3] , "죠스바": [250, 100] }
아이스크림["월드콘"] = [500,7] # 해당 새로운 키의 리스트를 추가
print(아이스크림)

#문제95 :
아이스크림 = {'탱크보이':1200, '폴라포':1200, '빵빠레':1800, '월드콘':1500 , '메로나':1000}
아이스크림이름 = list(아이스크림.keys()) #keys() 함수 사용시 딕셔너리내 모든 값을 가져오기
print(아이스크림)

#문제96 :
아이스크림 = {'탱크보이':1200, '폴라포':1200, '빵빠레':1800, '월드콘':1500 , '메로나':1000}
아이스크림이름 = list(아이스크림.values()) #valuse() 함수 사용시 딕셔너리내 모든 값을 가져오기
print(아이스크림)

#문제97 :
아이스크림 = {'탱크보이':1200, '폴라포':1200, '빵빠레':1800, '월드콘':1500 , '메로나':1000}
print("아이스크림 총합계 : " , sum(아이스크림.values()) )
                           # sum(리스트) : 모든 항목들의 합계

#문제98 :
아이스크림 = {'탱크보이':1200, '폴라포':1200, '빵빠레':1800, '월드콘':1500 , '메로나':1000}
새로운아이스크림 = {'팥빙수':2700,'아맛나':3000}

아이스크림.update(새로운아이스크림) # 딕셔너리명.update(딕셔너리명2) : 딕셔너리명 에 딕셔너리명2 추가
print(아이스크림)

#문제99 :
keys = ("apple" , "pear" , "peach" )
vals = (300,250,400)
      # keys 튜플과 vals 튜플 을 딕셔너리로 변환
딕셔너리 = dict( zip( keys,vals) )
        # dict(zip(튜플1 ,  튜플2) )
        # dict(zip("키1","키2") )
print(딕셔너리)

#문제100 :
date = ["09/05" , "09/06" , "09/07" , "09/08" , "09/09"]
close_price = [ 10500, 10300, 10100, 10100, 10800 , 11000 ]
     # date 리스트와 close_price 리스트 을 딕셔너리로 변환
딕셔너리 = dict(zip(date , close_price ) )
print(딕셔너리)